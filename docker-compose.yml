services:
  spring:
    build:
      context: ./back
      dockerfile: Dockerfile
    ports: ["8080:8080"]
    cap_add:
      - NET_ADMIN
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${MYSQL_DATABASE}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: ${REDIS_PASSWORD}
      GOOGLE_APPLICATION_CREDENTIALS: /app/credentials/application_default_credentials.json
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./back/src:/app/src
      - ~/.gradle:/home/gradle/.gradle
      - ${GOOGLE_JSON_PATH}/application_default_credentials.json:/app/credentials/application_default_credentials.json:ro
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
  mysql:
    image: mysql:8.0
    command: >
      bash -c "
      chmod 644 /etc/mysql/conf.d/my.cnf &&
      mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_0900_ai_ci
      "
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-appdb}
      - MYSQL_USER=${MYSQL_USER:-appuser}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - TZ=Asia/Seoul
      - MYSQL_CHARSET=utf8mb4
      - MYSQL_COLLATION=utf8mb4_0900_ai_ci
    ports: ["3307:3306"]
    volumes:
      - mysql_data:/var/lib/mysql
      - ./config/my.cnf:/etc/mysql/conf.d/my.cnf
    restart: unless-stopped
    healthcheck: # 'service_healthy'
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    command:
      [
        "redis-server",
        "--requirepass",
        "${REDIS_PASSWORD}",
        "--appendonly",
        "yes",
        "--appendfsync",
        "everysec",
      ]
    ports: ["6380:6379"]
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:
